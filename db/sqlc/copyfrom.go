// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: copyfrom.go

package sqlc

import (
	"context"
)

// iteratorForCreateFiles implements pgx.CopyFromSource.
type iteratorForCreateFiles struct {
	rows                 []*CreateFilesParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateFiles) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateFiles) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Name,
		r.rows[0].Access,
		r.rows[0].Path,
		r.rows[0].Ext,
	}, nil
}

func (r iteratorForCreateFiles) Err() error {
	return nil
}

func (q *Queries) CreateFiles(ctx context.Context, arg []*CreateFilesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"files"}, []string{"name", "access", "path", "ext"}, &iteratorForCreateFiles{rows: arg})
}
